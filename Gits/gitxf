#!/usr/bin/env bash
# hacked together way of switching between github gitlab
###### Make sure to change path/to/key to your key name ######
set -eo pipefail
gitserv="$1"
action="$2"
repo="$HOME/Gits/$3"
#ghserv="
#glserv="

pushd "$repo"
#if [ -z "$repo" ] || [ -z "$file" ]; then
if [ -z "$repo" ]; then
    figlet "ERROR!!"
    /usr/bin/echo ERROR: Please include repo name followed by filename or \* \(glob\) for entire dir.
  exit 1
fi

if [[ $gitserv == "-gh" ]]; then
    echo -e "# GitHub.com\n    Hostname github.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/<GitHub-Key-Name>\n    Hostname github.company.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/<GitHub-Key-Name>\n\n# GitLab.com\n#   Hostname gitlab.com\n#   PreferredAuthentications publickey\n#   IdentityFile ~/.ssh/<GitLab-Key-Name>\n#   Hostname gitlab.company.com\n#   PreferredAuthentications publickey\n#   IdentityFile ~/.ssh/<GitLab-Key-Name>\n" > ~/.ssh/config
elif [[ $gitserv == "-gl" ]]; then
    echo -e "# GitHub.com\n#   Hostname github.com\n#   PreferredAuthentications publickey\n#   IdentityFile ~/.ssh/<GitHub-Key-Name>\n#   Hostname github.company.com\n#   PreferredAuthentications publickey\n#   IdentityFile ~/.ssh/<GitHub-Key-Name>\n\n# GitLab.com\n    Hostname gitlab.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/<GitLab-Key-Name>\n    Hostname gitlab.company.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/<GitLab-Key-Name>\n" > ~/.ssh/config
else
    figlet "ERROR!!"
    printf "ERROR! Usage:  gitxf [-gh or -gl] [push or pull or check] [repo_name]\n"
    exit 1
fi


if [[ $action == "push" ]]; then
    /usr/bin/git status;
    read -p "Would you like to push changes?: " -n 1 -r
    if [[ $REPLY =~ ^[Yy]$ ]]; then
            /usr/bin/git add .
        elif [[ $REPLY =~ ^[Nn]$ ]]; then
            printf "\nNo Changes Pushed"
            sleep 2
            exit
        fi

    printf "\nCreate Comment:\n"
    read -r message

        git commit -m "$message"
        git push
        
    figlet "PUSH COMPLETE!!"
    popd
    sleep 1
    exit
elif [[ $action == "pull" ]]; then
    git pull --no-rebase
    figlet "PULL COMPLETE!!"
    popd
    sleep 1
    exit
elif [[ $action == "check" ]]; then
    git remote update && git status -uno
    exit
else
    figlet "ERROR!!"
    printf "ERROR! Usage:  gitxf [-gh or -gl] [push or pull or check] [repo_name]\n"
    popd
    sleep 1
    exit 1
fi

